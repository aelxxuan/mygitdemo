<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mysingle</groupId>
  <artifactId>singleGitDemo</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>singleGitDemo Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>
  <description>
    搭建一个基本的框架：spring+springmvc+mybatis,页面：jsp + bootstrap ,分权限，使用shiro
  </description>

  <!--集中定义公共的依赖版本号 -->
  <!-- 版本变量设置 Start -->
  <properties>

    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <!--架包版本变量 start-->
    <!--2016-02-20注释掉代码，切换到spring3试试-->
    <!--mybatis官网看到,如果要使用spring4的话,要用：mybatis-2-spring这个架包,http://blog.mybatis.org/2015/11/spring-4-got-you-down-with-no-ibatis.html-->
    <!--<spring.version>4.0.2.RELEASE</spring.version>-->
    <!--<mybatis.version>3.2.6</mybatis.version>-->
    <!--<mybatis-spring.version>1.2.2</mybatis-spring.version>-->

    <!--2016-02-20切换到spring3试试-->
    <!--mybatis官网：http://blog.mybatis.org/2016/02/mybatis-331-and-mybatis-spring-124.html,在2016-02-13发布了3.3.1版本-->
    <spring.version>4.3.2.RELEASE</spring.version>
    <mybatis.version>3.4.1</mybatis.version>
    <mybatis-spring.version>1.3.0</mybatis-spring.version>

    <!--下面这两个是springAOP需要用到-->
    <aspectjweaver.version>1.8.9</aspectjweaver.version>
    <persistence-api.version>1.0.2</persistence-api.version>

    <junit.version>4.11</junit.version>
    <mysql-connector.version>5.1.21</mysql-connector.version>
    <druid.version>1.0.4</druid.version>

    <javaee-api.version>7.0</javaee-api.version>
    <jstl.version>1.2</jstl.version>
    <jsp-api.version>2.0</jsp-api.version>
    <servlet-api.version>2.5</servlet-api.version>

    <commons-fileupload.version>1.3.1</commons-fileupload.version>
    <commons-io.version>2.4</commons-io.version>
    <commons-lang3.version>3.3.2</commons-lang3.version>
    <commons-email.version>1.3.2</commons-email.version>
    <commons-beanutils.version>1.9.2</commons-beanutils.version>

    <httpclient.version>4.3.3</httpclient.version>
    <jackson-databind.version>2.4.2</jackson-databind.version>
    <fastjson.version>1.2.16</fastjson.version>

    <commons-pool2.version>2.4.2</commons-pool2.version>
    <commons-codec.version>1.10</commons-codec.version>
    <httpclient.version>4.5.2</httpclient.version>
    <!--架包版本变量 end-->
    <!--插件版本变量 start-->
    <tomcat6-maven-plugin.version>2.1</tomcat6-maven-plugin.version>
    <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
    <jetty-plugin.version>8.1.16.v20140903</jetty-plugin.version>

    <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    <maven-war-plugin.version>2.3</maven-war-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-install-plugin.version>2.4</maven-install-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-dependency-plugin.version>2.5.1</maven-dependency-plugin.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <!--插件版本变量 end-->

    <!--其他变量 start-->
    <war-name.version>singleGitDemo</war-name.version>
    <jdk.version>1.7</jdk.version>

    <tomcat-port.version>8080</tomcat-port.version>
    <tomcat-uri-encoding.version>UTF-8</tomcat-uri-encoding.version>
    <tomcat-path.version>/</tomcat-path.version>
    <jetty-port.version>8080</jetty-port.version>
    <jetty-path.version>/</jetty-path.version>
    <hibernate-validator.version>5.2.4.Final</hibernate-validator.version>
    <!--其他变量 end-->

    <!--这个配置是为了解决下面两个警告-->
    <!--Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!-->
    <!--File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!-->
    <!--指定Maven用什么编码来读取源码及文档-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--指定Maven用什么编码来呈现站点的HTML文件-->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.sourceVersion>1.8</project.build.sourceVersion>
    <project.build.targetVersion>1.8</project.build.targetVersion>
    <aliyun-sdk-oss.version>2.3.0</aliyun-sdk-oss.version>
    <spring-data-redis.version>1.7.1.RELEASE</spring-data-redis.version>
    <jedis.version>2.8.2</jedis.version>
    <logback.version>1.1.7</logback.version>
    <slf4j.version>1.7.21</slf4j.version>
    <shiro.version>1.3.0</shiro.version>

  </properties>
  <!--版本变量设置 end  -->

  <!-- jar 包依赖 start-->
  <dependencies>

    <!-- ############################################################### Spring 相关包 start ############################################################### -->
    <!--spring 源码包下载地址：https://github.com/spring-projects/spring-framework/releases-->
    <!--http://takeme.iteye.com/blog/1977585-->
    <!--http://blog.csdn.net/bluishglc/article/details/6585221-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--springIoc 的基础实现，所有应都要用到的，它包含访问配置文件、创建和管理Bean以及进行IOC操作相关的所有类 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。 外部依赖spring-web-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--这个jar 文件包含支持UI模版（Velocity，FreeMarker，JasperReports），邮件服务，脚本服务(JRuby)，缓存Cache（EHCache），任务计划Scheduling（uartz）方面的类。 外部依赖spring-context-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--下面两个提供对 AspectJ 的支持，是 spring-aspects 所需要依赖的-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>${persistence-api.version}</version>
    </dependency>

    <!-- ############################################################### Spring 相关包 end ############################################################### -->


    <!-- mybatis核心包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <!-- mybatis/spring包 -->
    <!--官网英文材料：http://www.mybatis.org/spring/-->
    <!--官网中文资料：http://www.mybatis.org/spring/zh/index.html-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>


    <!-- 导入Mysql数据库链接jar包 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <!--这个组件具体可以看这里介绍:http://www.oschina.net/p/druid-->
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <!-- JSTL标签类 -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- java ee jar 包 -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--单元测试-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- 日志文件管理包 start -->
    <!--下面这三个是配套使用：http://blog.csdn.net/woshiwxw765/article/details/7624556-->
    <!--使用log4j start-->
    <!--<dependency>-->
    <!--<groupId>log4j</groupId>-->
    <!--<artifactId>log4j</artifactId>-->
    <!--<version>${log4j.version}</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--<groupId>org.slf4j</groupId>-->
    <!--<artifactId>slf4j-api</artifactId>-->
    <!--<version>${slf4j.version}</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--<groupId>org.slf4j</groupId>-->
    <!--<artifactId>slf4j-log4j12</artifactId>-->
    <!--<version>${slf4j.version}</version>-->
    <!--</dependency>-->
    <!--使用log4j end-->

    <!--使用logback start-->
    <!--导入这个的时候会自动导入：slf4j-api、logback-core，所以我们还需要导入：log4j和logback-ext-spring-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-access</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!--
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
    <dependency>
        <groupId>org.logback-extensions</groupId>
        <artifactId>logback-ext-spring</artifactId>
        <version>0.1.4</version>
    </dependency>
    -->

    <!-- Apache Shiro -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro.version}</version>
    </dependency>

    <!--使用logback end-->
    <!-- 日志文件管理包 end -->


    <!--JSON处理-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>

    <!-- 上传组件包 -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>


    <!--apache工具包-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons-beanutils.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>${commons-pool2.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-typehandlers-jsr310</artifactId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator.version}</version>
    </dependency>
    <!--JSon与字符串的转换 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <!--Excel处理 start -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.14</version>
    </dependency>
    <!--Excel处理 end -->
    <!--0ss -->
    <dependency>
      <groupId>com.aliyun.oss</groupId>
      <artifactId>aliyun-sdk-oss</artifactId>
      <version>${aliyun-sdk-oss.version}</version>
    </dependency>
    <!--reids  -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>${spring-data-redis.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-pool2</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>2.6.6</version>
    </dependency>


  </dependencies>
  <!-- jar 包依赖 end -->

  <!-- 设置maven下载地址 start -->
  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>central</id>
      <url>http://central.maven.org/maven2/</url>
    </repository>
    <repository>
      <id>nexus</id>
      <url>http://36.110.49.106:8081/repository/maven-public/</url>
    </repository>
    <repository>
      <id>alimaven</id>
      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
    </repository>
  </repositories>
  <!-- 设置maven下载地址 end -->


  <!--设置项目编译级别等 start -->
  <build>
    <finalName>singleGitDemo</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version><!--此版本(3.3,版本：2.3.2，不支持)才支持jdk8的新特性：stream -->
          <configuration>
            <source>${project.build.sourceVersion}</source>
            <target>${project.build.targetVersion}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <showWarnings>true</showWarnings>
            <showDeprecation>true</showDeprecation>
          </configuration>
        </plugin>

        <!-- resource插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>

        <!-- source插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>

        <!-- install插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>

        <!-- clean插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <!-- ant插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>

        <!-- dependency插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <includes>
              <include>**/*Test.java</include>
            </includes>
          </configuration>
        </plugin>

        <!--tomcat7插件  这个配置没有起作用  -->
        <!--https://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/run-mojo.html-->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>${tomcat7-maven-plugin.version}</version>
          <configuration>
            <path>${tomcat-path.version}</path>
            <port>${tomcat-port.version}</port>
            <uriEncoding>${tomcat-uri-encoding.version}</uriEncoding>
            <url>http://localhost:8080/manager/text</url>
            <server>tomcat7</server>
            <username>admin</username>
            <password>admin</password>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>8.1.8.v20121106</version>
          <configuration>
            <webAppConfig>
              <contextPath>/${project.build.finalName}</contextPath>
            </webAppConfig>
          </configuration>
        </plugin>
        <!--  jetty配置插件
        <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>8.1.8.v20121106</version>
            <configuration>
                <webAppConfig>
                    <contextPath>/${project.build.finalName}</contextPath>
                </webAppConfig>
            </configuration>
        </plugin>
        -->


      </plugins>
    </pluginManagement>
  </build>
  <!--设置项目编译级别等 end -->

  <!--profiles 设置 start  -->
  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <runtime.env>src/main/env/local</runtime.env>
        <final.name>ssm-console-local</final.name>
      </properties>
    </profile>
    <profile>
      <id>dev58</id>
      <properties>
        <runtime.env>src/main/env/dev58</runtime.env>
        <final.name>ssm-console-dev58</final.name>
      </properties>
    </profile>
    <profile>
      <id>dev36</id>
      <properties>
        <runtime.env>src/main/env/dev36</runtime.env>
        <final.name>ssm-console-dev36</final.name>
      </properties>
    </profile>
    <profile>
      <id>online</id>
      <properties>
        <final.name>ssm</final.name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <webResources>
                <resource>
                  <!-- 将子模块console下的xml配置文件也复制到classes目录下以备发布时可以手工修改 -->
                  <directory>${pom.basedir}/../console/src/main/resources</directory>
                  <targetPath>WEB-INF/classes</targetPath>
                </resource>
                <resource>
                  <directory>${project.build.directory}/compress</directory>
                </resource>
              </webResources>
            </configuration>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>yuicompressor-maven-plugin</artifactId>
            <version>1.3.0</version>
            <executions>
              <execution>
                <phase>process-resources</phase>
                <goals>
                  <goal>compress</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <skip>false</skip>
              <encoding>UTF-8</encoding>
              <jswarn>false</jswarn>
              <force>true</force>
              <nosuffix>true</nosuffix>
              <linebreakpos>-1</linebreakpos>
              <webappDirectory>${project.build.directory}/compress</webappDirectory>
              <includes>
                <include>**/*.js</include>
                <!--因一些min和非min使用混乱，此处指定css处理-->
                <include>**/help.css</include>
                <include>**/index_body.css</include>
              </includes>
              <excludes>
                <exclude>js/jquery.daterangepicker.js</exclude><!-- 语法不合规范不压缩 -->
                <exclude>**/*.min.js</exclude>
                <exclude>**/*.min.css</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!--profiles 设置 end  -->
</project>
